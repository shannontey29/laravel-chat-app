name: Laravel Chat App CI Workflow

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  ci-laravel-chat-app:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: laravel_chat_app
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -uroot -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      APP_ENV: testing
      APP_DEBUG: true
      APP_URL: http://127.0.0.1
      DB_CONNECTION: mysql
      DB_HOST: 127.0.0.1
      DB_PORT: 3306
      DB_DATABASE: laravel_chat_app
      DB_USERNAME: root
      DB_PASSWORD: root
      MAIL_MAILER: log
      CACHE_DRIVER: array
      SESSION_DRIVER: array
      QUEUE_CONNECTION: sync
      SCOUT_DRIVER: database

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up PHP 8.1
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: mbstring, bcmath, pdo_mysql, exif, pcntl, gd
          coverage: pcov
      - name: Set up Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Build Laravel Chat App
        run: make build

      - name: Upload application build artifact
        uses: actions/upload-artifact@v4
        with:
          name: laravel-chat-app-build
          path: build/chat-app.zip

      - name: Wait for MySQL service
        run: |
          for i in {1..30}; do
            if mysqladmin ping -h 127.0.0.1 -uroot -proot > /dev/null 2>&1; then
              echo "MySQL is ready!"
              break
            fi
            echo "Waiting for MySQL..."
            sleep 2
          done

      - name: Run tests and generate JUnit report
        run: |
          mkdir -p storage/test-reports
          php artisan test --log-junit storage/test-reports/junit.xml --coverage

      - name: Upload test report artifact
        uses: actions/upload-artifact@v4
        with:
          name: laravel-chat-app-test-report
          path: storage/test-reports/junit.xml

      - name: Upload code coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: laravel-chat-app-coverage
          path: coverage.txt

  deploy:
    runs-on: ubuntu-latest
    needs: ci-laravel-chat-app  
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/laravel-chat-app:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/laravel-chat-app:latest

      - name: Deploy with docker-compose
        run: |
          docker-compose down
          docker-compose up -d --build


